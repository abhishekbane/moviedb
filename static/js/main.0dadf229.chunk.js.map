{"version":3,"sources":["components/TabBar/TabBar.module.css","containers/MovieDetails/MovieDetails.module.css","components/PagingBar/PagingBar.module.css","components/SearchInput/SearchInput.module.css","components/ActorArticle/ActorArticle.module.css","components/DetailsCard/DetailsCard.module.css","containers/ActorDetails/ActorDetails.module.css","components/Header/Header.module.css","containers/Layout/Layout.module.css","components/MovieArticle/MovieArticle.module.css","components/UI/Dropdown/Dropdown.module.css","containers/MovieExplorer/MovieExplorer.module.css","components/UI/SubSection/SubSection.module.css","components/UI/OverviewArticle/OverviewArticle.module.css","components/UI/Poster/Poster.module.css","components/UI/RouterLink/RouterLink.module.css","components/MovieGallery/MovieGallery.module.css","hoc/TabbedWindow/TabbedWindow.module.css","components/ActorGallery/ActorGallery.module.css","components/UI/ScrollableSection/ScrollableSection.module.css","components/UI/RouterLink/RouterLink.tsx","components/Header/Header.tsx","containers/Layout/Layout.tsx","components/UI/OverviewArticle/OverviewArticle.tsx","components/UI/Poster/Poster.tsx","hoc/TabbedWindow/TabbedWindow.tsx","components/MovieArticle/MovieArticle.tsx","components/MovieGallery/MovieGallery.tsx","components/PagingBar/PagingBar.tsx","components/SearchInput/SearchInput.tsx","components/UI/Dropdown/Dropdown.tsx","components/TabBar/TabBar.tsx","hooks/Fetch/Fetch.tsx","containers/MovieExplorer/MovieExplorer.tsx","components/ActorArticle/ActorArticle.tsx","components/ActorGallery/ActorGallery.tsx","components/DetailsCard/DetailsCard.tsx","components/UI/SubSection/SubSection.tsx","components/UI/ScrollableSection/ScrollableSection.tsx","containers/MovieDetails/MovieDetails.tsx","containers/MovieDetails/MovieDetailsPage.tsx","containers/ActorDetails/ActorDetails.tsx","containers/ActorDetails/ActorDetailsPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","PathName","Header","props","className","styles","header","link","to","process","title","Layout","layout","content","children","OverviewArticle","movieArticle","Poster","poster","alt","src","FilterTypes","RouterLink","MovieArticle","movie","length","slice","id","posterSource","details","rating","MovieGallery","movieArticles","movies","map","index","movieGallery","MovieExplorer","pagingBar","pagingButton","disabled","disablePrevButton","onClick","onPrevClick","disableNextButton","onNextClick","SearchInput","useState","searchTerm","setSearchTerm","searchInput","onKeyDown","event","key","preventDefault","onSearch","searchBox","type","value","onChange","ev","target","goButton","Dropdown","defaultValue","selectedValue","setSelectedValue","dropdownRef","useRef","useEffect","deselect","current","selectedIndex","options","option","name","console","log","ref","dropdown","undefined","TabBar","defaultFilter","selectedTab","setSelectedTab","onTabSelectedHandler","onTabSelect","tabBar","tabClassNames","tab","tabSelected","allowSearch","searchSelectedClass","searchContainerClasses","inputContainer","dropdownTabClasses","dropdownTab","tabsDisplay","TrendingDuration","TrendingToday","TrendingThisWeek","Popular","TabbedWindow","tabbedWindow","IMAGE_PARENT_URL","API_ORIGIN","API_KEY","pageFilter","selectedFilter","setMovies","prevPageFilter","setPrevPageFilter","nextPageFilter","setNextPageFilter","setMoviesBasedOnFilter","filterType","page","a","apiUrl","Today","Week","fetch","response","json","result","results","poster_path","isAdult","adult","vote_average","alert","setNextMoviesBasedOnFilter","setPrevMoviesBasedOnFilter","setMoviesBasedOnSearch","validSearchTerm","split","reduce","acc","useFilter","isSearchSelected","setIsSearchSelected","movieGalleryContainer","PagingBar","prevButtonText","nextButtonText","ActorArticle","character","splitCharacter","trim","actor","posterPath","alias","ActorGallery","actorGallery","actors","DetailsCard","basicDetailsCard","posterAlt","basicDetails","SubSection","subSection","ScrollableSection","section","MovieDetails","paragraph","status","releaseDate","runtime","overview","MovieDetailsPage","setMovie","localMovie","release_date","credits","cast","profile_path","useFindMovieById","match","params","ActorDetails","placeOfBirth","birthdate","biography","ActorDetailsPage","setActor","localActor","place_of_birth","birthday","movie_credits","useFindActorById","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0dadf229.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabBar\":\"TabBar_tabBar__3ojdZ\",\"tab\":\"TabBar_tab__25MS2\",\"tabsDisplay\":\"TabBar_tabsDisplay__F-lUU\",\"tabSelected\":\"TabBar_tabSelected__10538\",\"inputContainer\":\"TabBar_inputContainer__1jHSD\",\"dropdownTab\":\"TabBar_dropdownTab__2HWPW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"MovieDetails_paragraph__4J_AB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagingButton\":\"PagingBar_pagingButton__1_vlZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"SearchInput_searchInput__35Kzv\",\"searchBox\":\"SearchInput_searchBox__3jelk\",\"goButton\":\"SearchInput_goButton__23KSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"ActorArticle_details__1OpT1\",\"alias\":\"ActorArticle_alias__MNCJn\",\"title\":\"ActorArticle_title__734AO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicDetailsCard\":\"DetailsCard_basicDetailsCard__bTFTV\",\"basicDetails\":\"DetailsCard_basicDetails__2TXQC\",\"title\":\"DetailsCard_title__gaMYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"ActorDetails_paragraph__3O5KK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3veFn\",\"link\":\"Header_link__sHEMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__29hTy\",\"content\":\"Layout_content__2vf5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"MovieArticle_details__1UTD5\",\"title\":\"MovieArticle_title__2U0Wq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown_dropdown__3eYD8\",\"option\":\"Dropdown_option__U92Pc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieGalleryContainer\":\"MovieExplorer_movieGalleryContainer__29kVR\",\"movieGallery\":\"MovieExplorer_movieGallery__1hCkv\",\"pagingButton\":\"MovieExplorer_pagingButton__2MGzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"SubSection_title__eKFP0\",\"subSection\":\"SubSection_subSection__2eXRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieArticle\":\"OverviewArticle_movieArticle__1k0Yd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poster\":\"Poster_poster__18gIH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"RouterLink_link__3lR7j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieGallery\":\"MovieGallery_movieGallery__hGWzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabbedWindow\":\"TabbedWindow_tabbedWindow__b-xe0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actorGallery\":\"ActorGallery_actorGallery__Zsxsm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ScrollableSection_section__1Ef3g\"};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styles from './RouterLink.module.css';\r\n\r\nexport enum PathName {\r\n    movie = \"movie\",\r\n    actor = \"actor\"\r\n}\r\n\r\nexport interface IRouterLink {\r\n    to: string,\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst RouterLink = ( props: IRouterLink ) => {\r\n    return (\r\n        <Link className={ styles.link } to={ `${process.env.PUBLIC_URL}${props.to}` }>\r\n            { props.children }\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default RouterLink;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport styles from './Header.module.css';\r\n\r\ninterface IHeader {\r\n    title: string;\r\n}\r\n\r\nconst Header: React.FunctionComponent<IHeader> = ( props: IHeader ) => {\r\n\r\n    return (\r\n        <header className={ styles.header }>\r\n            <Link className={ styles.link } to={`${process.env.PUBLIC_URL}`}>\r\n                <h1> { props.title } </h1>\r\n            </Link>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\n\r\nimport Header from '../../components/Header/Header';\r\n\r\nimport styles from './Layout.module.css';\r\n\r\ninterface ILayout {\r\n    onMovieSelected?( movieId: number ): void;\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst Layout = ( props: ILayout ) => {\r\n\r\n    return (\r\n        <div className={ styles.layout }>\r\n            <Header title=\"Movie DB\" />\r\n            <div className={ styles.content }>\r\n                { props.children }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\n\r\nimport styles from './OverviewArticle.module.css';\r\n\r\nexport interface IOverviewArticle {\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst OverviewArticle = ( props: IOverviewArticle ) => {\r\n\r\n    return (\r\n        <article className={ styles.movieArticle }>\r\n            { props.children }\r\n        </article>\r\n    );\r\n};\r\n\r\nexport default OverviewArticle;","import React from 'react';\r\n\r\nimport styles from './Poster.module.css';\r\n\r\nexport interface IPoster {\r\n    src: string;\r\n    alt: string;\r\n}\r\n\r\nconst Poster = ( props: IPoster ) => {\r\n    return <img className={ styles.poster } alt={ props.alt } src={ props.src }/>;\r\n};\r\n\r\nexport default Poster;","import React from 'react';\r\n\r\nimport TabBar, { ITabBarOption } from '../../components/TabBar/TabBar';\r\n\r\nimport styles from './TabbedWindow.module.css';\r\n\r\nexport enum FilterTypes {\r\n    TrendingToday = \"TrendingToday\",\r\n    TrendingThisWeek = \"TrendingThisWeek\",\r\n    Popular = \"Popular\"\r\n}\r\n\r\ninterface ITabbedWindow {\r\n    defaultFilter: FilterTypes;\r\n    onTabSelect( filterType: FilterTypes ): void;\r\n    onSearch( searchTerm: string ): void\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst options: ITabBarOption[] = [\r\n    {   \r\n        name: \"Trending today\",\r\n        value: FilterTypes.TrendingToday\r\n    },\r\n    {\r\n        name: \"Trending this week\",\r\n        value: FilterTypes.TrendingThisWeek\r\n    },\r\n    {\r\n        name: \"Popular\",\r\n        value: FilterTypes.Popular\r\n    }\r\n];\r\n\r\nconst TabbedWindow = ( props: ITabbedWindow ) => {\r\n    return (\r\n        <div className={ styles.tabbedWindow }>\r\n            <TabBar defaultFilter={ props.defaultFilter } onTabSelect={ props.onTabSelect } allowSearch onSearch={ props.onSearch } options={ options } />\r\n            { props.children }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TabbedWindow;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport OverviewArticle from '../UI/OverviewArticle/OverviewArticle';\r\nimport Poster from '../UI/Poster/Poster';\r\nimport RouterLink, { PathName } from '../UI/RouterLink/RouterLink';\r\n\r\nimport styles from './MovieArticle.module.css';\r\n\r\nexport interface IMovieArticleData {\r\n    id: number;\r\n    title: string;\r\n    posterSource: string;\r\n    isAdult: boolean;\r\n    rating: number;\r\n}\r\n\r\nexport interface IMovieArticle {\r\n    movie: IMovieArticleData;\r\n}\r\n\r\nconst MovieArticle = ( props: IMovieArticle ) => {\r\n\r\n    const title = props.movie.title.length > 18 ? props.movie.title.slice(0, 15)+\"...\" : props.movie.title;\r\n\r\n    return (\r\n        <OverviewArticle>\r\n            <RouterLink to={ `/${PathName.movie}/${props.movie.id}` } >\r\n                <Poster alt={ props.movie.title } src={ props.movie.posterSource }/>\r\n                <div className={ styles.details }>\r\n                    <h3 className={ styles.title }>{ title }</h3>\r\n                    <span>{ props.movie.rating }</span>\r\n                </div>\r\n            </RouterLink>\r\n        </OverviewArticle>\r\n    );\r\n};\r\n\r\nexport default MovieArticle;","import React from 'react';\r\n\r\nimport MovieArticle, { IMovieArticleData } from '../MovieArticle/MovieArticle';\r\n\r\nimport styles from './MovieGallery.module.css';\r\n\r\ninterface IMovieGallery {\r\n    movies: IMovieArticleData[];\r\n    onMovieSelected?( id: number ): void;\r\n}\r\n\r\nconst MovieGallery = ( props: IMovieGallery ) => {\r\n\r\n    const movieArticles = props.movies.map( ( movie, index ) => (\r\n        <MovieArticle\r\n            key={index}\r\n            movie={ movie }\r\n        />\r\n    ));\r\n\r\n    return (\r\n        <div className={ styles.movieGallery }>\r\n            { movieArticles }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieGallery;","import React, { useEffect, useState } from 'react';\r\n\r\nimport MovieGallery from '../../components/MovieGallery/MovieGallery';\r\nimport { IMovieArticleData } from '../../components/MovieArticle/MovieArticle';\r\nimport TabbedWindow, { FilterTypes } from '../../hoc/TabbedWindow/TabbedWindow';\r\n\r\nimport { useFilter } from '../../hooks/Fetch/Fetch';\r\n\r\nimport styles from './PagingBar.module.css';\r\n\r\ninterface IPagingBar {\r\n    prevIconSrc?: string;\r\n    nextIconSrc?: string;\r\n    prevButtonText?: string;\r\n    nextButtonText?: string\r\n    disablePrevButton: boolean;\r\n    disableNextButton: boolean;\r\n    onPrevClick(): void;\r\n    onNextClick(): void;\r\n}\r\n\r\nconst MovieExplorer= ( props: IPagingBar ) => {\r\n\r\n    return (\r\n        <div className={ styles.pagingBar }>\r\n            <button \r\n                className={ styles.pagingButton } \r\n                disabled={ props.disablePrevButton } \r\n                onClick={ () => props.onPrevClick() }\r\n                >\r\n                {`Previous`}\r\n            </button>\r\n            <button \r\n                className={ styles.pagingButton } \r\n                disabled={ props.disableNextButton } \r\n                onClick={ () => props.onNextClick() }>{`Next`}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieExplorer;","import React, { useState } from 'react';\r\n\r\nimport styles from './SearchInput.module.css';\r\n\r\ninterface ISearchBoxProps {\r\n    onSearch( searchTerm: string ): void;\r\n}\r\n\r\nconst SearchInput = ( props: ISearchBoxProps ) => {\r\n    const [ searchTerm, setSearchTerm ] = useState(\"\");\r\n\r\n    const onEnterPressed = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            props.onSearch( searchTerm );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={ styles.searchInput }>\r\n            <input \r\n                onKeyDown={ onEnterPressed }\r\n                className={ styles.searchBox } \r\n                type=\"text\" \r\n                value={ searchTerm } \r\n                onChange={ (ev) => setSearchTerm(ev.target.value) } />\r\n            <button className={ styles.goButton } onClick={ () => (searchTerm ? props.onSearch( searchTerm ) : null) } >Go</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchInput;","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport styles from './Dropdown.module.css';\r\n\r\nexport interface IDropdownOption {\r\n    id?: number | string;\r\n    name: string;\r\n    value: string;\r\n}\r\n\r\ninterface IDropdown {\r\n    defaultValue: string;\r\n    options: IDropdownOption[];\r\n    name: string;\r\n    id?: string;\r\n    deselect?: boolean;\r\n    onChange( newValue: string ): void;\r\n}\r\n\r\nconst Dropdown = ( props: IDropdown ) => {\r\n\r\n    const [ selectedValue, setSelectedValue ] = useState( props.defaultValue );\r\n    const dropdownRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if( props.deselect ) {\r\n            (dropdownRef as any).current.selectedIndex=\"-1\";\r\n        }\r\n    }, [  props.deselect ]);\r\n\r\n    const options = props.options.map( ( option, index ) => ( \r\n        <option className={ styles.option } key={ index } value={ option.value } > { option.name } </option> \r\n    ) );\r\n\r\n    const onChangeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setSelectedValue(event.target.value);\r\n        props.onChange(event.target.value);\r\n    }\r\n\r\n    if(dropdownRef.current){\r\n        console.log((dropdownRef as any).current.selectedIndex);\r\n        console.log((dropdownRef as any).current.value);\r\n    }\r\n\r\n    return (\r\n        <select\r\n            ref={ dropdownRef } \r\n            className={ styles.dropdown }\r\n            value={ props.deselect ? undefined : selectedValue } \r\n            onChange={ onChangeHandler } \r\n            name={ props.name } id={ props.id }>\r\n            { options }\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default Dropdown;","import React, { useState, useRef } from 'react';\r\n\r\nimport SearchInput from '../SearchInput/SearchInput';\r\n\r\nimport { FilterTypes } from '../../hoc/TabbedWindow/TabbedWindow';\r\n\r\nimport styles from './TabBar.module.css';\r\nimport Dropdown from '../UI/Dropdown/Dropdown';\r\n\r\nexport interface ITabBarOption {\r\n    id?: number | string;\r\n    name: string;\r\n    value: string;\r\n}\r\n\r\ninterface ITabBar {\r\n    options: ITabBarOption[];\r\n    allowSearch?: boolean;\r\n    defaultFilter: FilterTypes;\r\n    onSearch?( value: string ): void;\r\n    onTabSelect(value: string) : void\r\n}\r\n\r\nconst TabBar = ( props: ITabBar ) => {\r\n    const [ selectedTab, setSelectedTab ] = useState(props.defaultFilter as string);\r\n    const onTabSelectedHandler = ( value: string ) => {\r\n        props.onTabSelect( value );\r\n        setSelectedTab(value);\r\n    }\r\n\r\n    const onSearchHandler = ( searchTerm: string ) => {\r\n        if(props.onSearch){\r\n            props.onSearch( searchTerm );\r\n        }\r\n        setSelectedTab(\"\");\r\n    }\r\n\r\n    const tabBar = props.options.map( (option, index) => {\r\n        const tabClassNames = `${styles.tab} ${selectedTab===option.value?styles.tabSelected:\"\"}`\r\n        return (\r\n            <button \r\n                className={ tabClassNames } \r\n                key={ index } \r\n                onClick={ () => onTabSelectedHandler(option.value) }>\r\n                    { option.name }\r\n            </button>\r\n        )\r\n    });\r\n\r\n    const searchInput = props.allowSearch ? <SearchInput onSearch={ onSearchHandler } /> : null\r\n    \r\n    const searchSelectedClass = selectedTab===\"\" ? styles.tabSelected : \"\";\r\n    const searchContainerClasses = `${styles.inputContainer} ${searchSelectedClass}`;\r\n\r\n    let dropdownTabClasses = `${styles.inputContainer} ${styles.dropdownTab}`;\r\n    dropdownTabClasses += selectedTab !== \"\" ? \" \"+styles.tabSelected : \"\";\r\n\r\n    return (\r\n        <nav className={ styles.tabBar }>\r\n            <div className={ styles.tabsDisplay }>\r\n                { tabBar }\r\n            </div>\r\n            <div className={ dropdownTabClasses }>\r\n                <Dropdown \r\n                    deselect={ selectedTab===\"\" }\r\n                    defaultValue={ props.defaultFilter } \r\n                    options={ props.options } \r\n                    name=\"filterDropdown\" \r\n                    onChange={ onTabSelectedHandler } />\r\n            </div>\r\n            <div className={ searchContainerClasses }>\r\n                { searchInput }\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default TabBar;","import React, { useState } from 'react';\r\n\r\nimport { IMovieArticleData } from '../../components/MovieArticle/MovieArticle';\r\nimport { IMovieDetailsData } from '../../containers/MovieDetails/MovieDetails';\r\nimport { IActorArticleData } from '../../components/ActorArticle/ActorArticle';\r\nimport { IActorDetailsData } from '../../containers/ActorDetails/ActorDetails';\r\n\r\nimport { FilterTypes } from '../../hoc/TabbedWindow/TabbedWindow';\r\n\r\nexport enum TrendingDuration {\r\n    Today = \"day\",\r\n    Week = \"week\"\r\n}\r\n\r\nexport const IMAGE_PARENT_URL = \"https://image.tmdb.org/t/p/w185\";\r\n\r\nconst API_ORIGIN = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"api_key=60c713cb032d351520ee1b18537262f5\";\r\n\r\nlet pageFilter=1;\r\nlet selectedFilter=\"\";\r\n\r\nexport const useFilter = () => {\r\n\r\n    const [ movies, setMovies ] = useState([] as IMovieArticleData[]);\r\n    const [ prevPageFilter, setPrevPageFilter ] = useState(0);\r\n    const [ nextPageFilter, setNextPageFilter ] = useState(2);\r\n\r\n    const setMoviesBasedOnFilter = async( filterType: FilterTypes, page?: number ) => {\r\n        let apiUrl = API_ORIGIN;\r\n        \r\n        pageFilter = page ? page : 1;\r\n        selectedFilter = filterType;\r\n        setPrevPageFilter(pageFilter-1);\r\n        setNextPageFilter(pageFilter+1);\r\n\r\n        switch(filterType) {\r\n            case FilterTypes.TrendingToday:\r\n                apiUrl+='/trending/movie/'+TrendingDuration.Today;\r\n                break;\r\n            case FilterTypes.TrendingThisWeek:\r\n                apiUrl+='/trending/movie/'+TrendingDuration.Week;\r\n                break;\r\n            case FilterTypes.Popular:\r\n                apiUrl+='/movie/popular';\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch( `${apiUrl}?${API_KEY}&page=${pageFilter}`);\r\n            const result: any = await response.json();\r\n            const movies: IMovieArticleData[] = result.results.map( (movie: any): IMovieArticleData => (\r\n                {\r\n                    title: movie.title,\r\n                    id: movie.id,\r\n                    posterSource: IMAGE_PARENT_URL+movie.poster_path,\r\n                    isAdult: movie.adult,\r\n                    rating: movie.vote_average\r\n                }\r\n            ) );\r\n            setMovies(movies);\r\n        }\r\n        catch {\r\n            alert( \"Couldn't fetch your movies\" );\r\n        }\r\n    };\r\n\r\n    const setNextMoviesBasedOnFilter = () => {\r\n        debugger;\r\n        setPrevPageFilter(pageFilter);\r\n        if( pageFilter < 1000 ) {\r\n            setNextPageFilter(++pageFilter);\r\n        }\r\n        else {\r\n            setNextPageFilter(0);\r\n        }\r\n        setMoviesBasedOnFilter( selectedFilter as FilterTypes, pageFilter );\r\n    };\r\n\r\n    const setPrevMoviesBasedOnFilter = () => {\r\n        setNextPageFilter(pageFilter);\r\n        if( pageFilter > 1 ){\r\n            setPrevPageFilter(--pageFilter);\r\n        }\r\n        else {\r\n            setPrevPageFilter(0);\r\n        }\r\n\r\n        setMoviesBasedOnFilter( selectedFilter as FilterTypes, pageFilter );\r\n    };\r\n\r\n    const setMoviesBasedOnSearch = async( searchTerm: string ) => {\r\n        const validSearchTerm = searchTerm.split(\" \").reduce( ( acc, current ) => (acc+\"+\"+current) );\r\n        console.log(validSearchTerm);\r\n        const apiUrl = API_ORIGIN + `/search/movie?${API_KEY}&query=${validSearchTerm}`;\r\n\r\n        try {\r\n            const response = await fetch( apiUrl );\r\n            const result: any = await response.json();\r\n            const movies: IMovieArticleData[] = result.results.map( (movie: any): IMovieArticleData => (\r\n                {\r\n                    title: movie.title,\r\n                    id: movie.id,\r\n                    posterSource: IMAGE_PARENT_URL+movie.poster_path,\r\n                    isAdult: movie.adult,\r\n                    rating: movie.vote_average\r\n                }\r\n            ) );\r\n            setMovies(movies);\r\n        }\r\n        catch {\r\n            alert( \"Couldn't fetch your movies\" );\r\n        }\r\n\r\n    };\r\n\r\n    return {\r\n        movies,\r\n        prevPageFilter,\r\n        nextPageFilter,\r\n        setMoviesBasedOnFilter,\r\n        setNextMoviesBasedOnFilter,\r\n        setPrevMoviesBasedOnFilter,\r\n        setMoviesBasedOnSearch\r\n    };\r\n\r\n};\r\n\r\nexport const useFindActorById = (defaultValue: IActorDetailsData): [ IActorDetailsData, (id: number) => Promise<void> ] => {\r\n    const [ actor, setActor ] = useState(defaultValue);\r\n\r\n    const setActorWithId = async(id: number) => {\r\n        let apiUrl = API_ORIGIN+`/person/${id}?${API_KEY}&append_to_response=movie_credits`;\r\n        try{\r\n            const response = await fetch( apiUrl );\r\n            const result = await response.json();\r\n\r\n            const localActor: IActorDetailsData = {\r\n                id: result.id,\r\n                name: result.name,\r\n                posterSource: IMAGE_PARENT_URL+result.profile_path,\r\n                biography: result.biography,\r\n                placeOfBirth: result.place_of_birth,\r\n                birthdate: result.birthday,\r\n                movies: result.movie_credits.cast.map( (movie: any): IMovieArticleData  => (\r\n                    {\r\n                        id: movie.id,\r\n                        title: movie.title,\r\n                        posterSource: IMAGE_PARENT_URL+movie.poster_path,\r\n                        isAdult: movie.adult,\r\n                        rating: movie.vote_average,\r\n                    }\r\n                ) )\r\n            };\r\n\r\n            setActor( localActor );\r\n        }\r\n        catch {\r\n            alert( \"Couldn't fetch your movies\" );\r\n        }\r\n    };\r\n\r\n    return [\r\n        actor,\r\n        setActorWithId\r\n    ];\r\n}\r\n\r\nexport const useFindMovieById = (defaultValue: IMovieDetailsData): [ IMovieDetailsData, (id: number) => Promise<void> ] => {\r\n    const [ movie, setMovie ] = useState(defaultValue);\r\n\r\n    const setMovieWithId = async( id: number ) => {\r\n        let apiUrl = API_ORIGIN+`/movie/${id}?${API_KEY}&append_to_response=credits`\r\n        try {\r\n            const response = await fetch( apiUrl );\r\n            const result = await response.json();\r\n            const localMovie: IMovieDetailsData = {\r\n                    title: result.title,\r\n                    posterSource: IMAGE_PARENT_URL+result.poster_path,\r\n                    isAdult: result.adult,\r\n                    overview: result.overview,\r\n                    rating: result.vote_average,\r\n                    status: result.status,\r\n                    releaseDate: result.release_date,\r\n                    runtime: result.runtime,\r\n                    actors: result.credits.cast.map( (actor: any): IActorArticleData => (\r\n                        {\r\n                            id: actor.id,\r\n                            posterPath: IMAGE_PARENT_URL+actor.profile_path,\r\n                            name: actor.name,\r\n                            character: actor.character\r\n                        }\r\n                    ) )\r\n                }\r\n            setMovie(localMovie);\r\n        }\r\n        catch {\r\n            alert( \"Couldn't fetch your movies\" );\r\n        }\r\n        \r\n    }\r\n\r\n    return [\r\n        movie,\r\n        setMovieWithId\r\n    ];\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport MovieGallery from '../../components/MovieGallery/MovieGallery';\r\nimport PagingBar from '../../components/PagingBar/PagingBar';\r\nimport TabbedWindow, { FilterTypes } from '../../hoc/TabbedWindow/TabbedWindow';\r\n\r\nimport { useFilter } from '../../hooks/Fetch/Fetch';\r\n\r\nimport styles from './MovieExplorer.module.css';\r\n\r\ninterface IMovieExplorer {\r\n}\r\n\r\nconst MovieExplorer= ( props: IMovieExplorer ) => {\r\n\r\n    const { movies, prevPageFilter, nextPageFilter, setMoviesBasedOnFilter, setMoviesBasedOnSearch, setNextMoviesBasedOnFilter, setPrevMoviesBasedOnFilter } = useFilter();\r\n    \r\n    const [ isSearchSelected, setIsSearchSelected ] = useState( false );\r\n    const defaultFilter = FilterTypes.TrendingToday;\r\n\r\n    useEffect( () => {\r\n        setMoviesBasedOnFilter( defaultFilter );\r\n    }, [] );\r\n\r\n    const onSearchHandler = ( searchTerm: string ) => {\r\n        setMoviesBasedOnSearch(searchTerm);\r\n        setIsSearchSelected(true);\r\n    };\r\n\r\n    const onTabSelectedHandler = ( filterType: FilterTypes ) => {\r\n        setMoviesBasedOnFilter( filterType );\r\n        setIsSearchSelected(false);\r\n    }\r\n\r\n    return (\r\n        <TabbedWindow \r\n            defaultFilter={ defaultFilter } \r\n            onSearch={ onSearchHandler } \r\n            onTabSelect={ onTabSelectedHandler }>\r\n                <div className={ styles.movieGalleryContainer }>\r\n                    <div className={ styles.movieGallery }>\r\n                        <MovieGallery movies={ movies } />\r\n                    </div>\r\n                    <PagingBar \r\n                        disableNextButton={ !nextPageFilter || isSearchSelected }\r\n                        disablePrevButton={ !prevPageFilter || isSearchSelected }\r\n                        prevButtonText=\"<\"\r\n                        nextButtonText=\">\"\r\n                        onPrevClick={ () => setPrevMoviesBasedOnFilter() }\r\n                        onNextClick={ () => setNextMoviesBasedOnFilter() }\r\n                    />\r\n                </div>\r\n        </TabbedWindow>\r\n    );\r\n};\r\n\r\nexport default MovieExplorer;","import React from 'react';\r\n\r\nimport OverviewArticle from '../UI/OverviewArticle/OverviewArticle';\r\nimport Poster from '../UI/Poster/Poster';\r\nimport RouterLink, { PathName } from '../UI/RouterLink/RouterLink';\r\n\r\nimport styles from './ActorArticle.module.css';\r\n\r\nexport interface IActorArticleData {\r\n    id: number;\r\n    posterPath: string;\r\n    name: string;\r\n    character?: string;\r\n}\r\n\r\ninterface IActorArticle extends IActorArticleData {\r\n}\r\n\r\nconst ActorArticle = ( props: IActorArticle ) => {\r\n\r\n    const name = props.name.length > 18 ? props.name.slice(0, 15)+\"...\" : props.name;\r\n\r\n    let character=\"\";\r\n    if(props.character){\r\n        const splitCharacter = props.character.split('(', 2);\r\n        character = splitCharacter.length===2 ? `(${splitCharacter[1].trim()} ${splitCharacter[0].trim()}` : props.character;\r\n        character = character.length > 18 ? character.slice(0, 15)+\"...\" : character;\r\n    }\r\n\r\n    return (\r\n        <OverviewArticle>\r\n            <RouterLink to={ `/${PathName.actor}/${props.id}` }>\r\n                <Poster src={ props.posterPath } alt={ props.name } />\r\n                <div className={ styles.details }>\r\n                    <h3 className={ styles.title }>{ name }</h3>\r\n                    <h3 className={ styles.alias }>{ character }</h3>\r\n                </div>\r\n            </RouterLink>\r\n        </OverviewArticle>\r\n    );\r\n};\r\n\r\nexport default ActorArticle;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ActorArticle, { IActorArticleData } from '../ActorArticle/ActorArticle';\r\n\r\nimport styles from './ActorGallery.module.css';\r\n\r\ninterface IActorGallery {\r\n    actors: IActorArticleData[];\r\n}\r\n\r\nconst ActorGallery = (props: IActorGallery ) => {\r\n    const actorGallery = props.actors.map( (actor, index) => (\r\n        <ActorArticle \r\n            key={index}\r\n            posterPath={ actor.posterPath }\r\n            name={ actor.name }\r\n            character={ actor.character }\r\n            id={ actor.id }\r\n        />\r\n    ));\r\n\r\n    return (\r\n        <section className={ styles.actorGallery }>\r\n            {actorGallery}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default ActorGallery;","import React from 'react';\r\nimport Poster from '../UI/Poster/Poster';\r\n\r\nimport styles from './DetailsCard.module.css';\r\n\r\nexport interface IDetailsCard{\r\n    posterSource: string;\r\n    posterAlt: string;\r\n    title: string;\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst DetailsCard = ( props: IDetailsCard ) => {\r\n\r\n    return (\r\n        <div className={ styles.basicDetailsCard }>\r\n            <Poster src={ props.posterSource } alt={ props.posterAlt }/>\r\n            <div className={ styles.basicDetails }>\r\n                <h2 className={ styles.title }>{ props.title }</h2>\r\n                { props.children }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DetailsCard;","import React from 'react';\r\n\r\nimport styles from './SubSection.module.css';\r\n\r\nexport interface ISubSection{\r\n    title: string;\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst SubSection = ( props: ISubSection ) => {\r\n\r\n    return (\r\n        <div className={ styles.subSection }>\r\n            <h3 className={ styles.title }>{ props.title }</h3>\r\n            { props.children }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubSection;","import React from 'react';\r\nimport styles from './ScrollableSection.module.css';\r\n\r\nexport interface IScrollableSection {\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst ScrollableSection = ( props: IScrollableSection ) => {\r\n    return (\r\n        <section className={ styles.section }>\r\n            { props.children }\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default ScrollableSection;","import React, { useEffect } from 'react';\r\n\r\nimport ActorGallery from '../../components/ActorGallery/ActorGallery';\r\nimport DetailsCard from '../../components/DetailsCard/DetailsCard';\r\n\r\nimport { IActorArticleData } from '../../components/ActorArticle/ActorArticle';\r\n\r\nimport styles from './MovieDetails.module.css';\r\nimport SubSection from '../../components/UI/SubSection/SubSection';\r\nimport ScrollableSection from '../../components/UI/ScrollableSection/ScrollableSection';\r\nimport { isNullishCoalesce } from 'typescript';\r\n\r\nexport interface IMovieDetailsData {\r\n    posterSource: string;\r\n    title: string;\r\n    overview: string;\r\n    rating: string;\r\n    isAdult: boolean;\r\n    status: string;\r\n    releaseDate: string;\r\n    runtime: string;\r\n    actors: IActorArticleData[];\r\n}\r\n\r\nexport interface IMovieDetails{\r\n    movie: IMovieDetailsData;\r\n}\r\n\r\nconst MovieDetails = ( props: IMovieDetails ) => {\r\n\r\n    return (\r\n        <ScrollableSection>\r\n            <DetailsCard \r\n                title={props.movie.title} \r\n                posterSource={ props.movie.posterSource }\r\n                posterAlt={ props.movie.title } >\r\n                    <p className={ styles.paragraph }>Status: { props.movie.status }</p>\r\n                    { props.movie.releaseDate ? <p className={ styles.paragraph }>Release date: { props.movie.releaseDate }</p> : null }\r\n                    <p  className={ styles.paragraph }>Rating: { props.movie.rating }/10</p>\r\n                    <p  className={ styles.paragraph }>Runtime: { props.movie.runtime }m</p>\r\n            </DetailsCard>\r\n\r\n            <SubSection title=\"Synopsis\">\r\n                <p className={ styles.paragraph }>{ props.movie.overview }</p>\r\n            </SubSection>\r\n                \r\n            <SubSection title=\"Actors\">\r\n                <ActorGallery actors={ props.movie.actors } />\r\n            </SubSection>\r\n        </ScrollableSection>\r\n    )\r\n};\r\n\r\nexport default MovieDetails;","import React, { useEffect } from 'react';\r\n\r\nimport MovieDetails, { IMovieDetailsData } from './MovieDetails';\r\n\r\nimport { useFindMovieById } from '../../hooks/Fetch/Fetch';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\n\r\nconst MovieDetailsPage = (props?: RouteComponentProps) => {\r\n    const [ movie, setMovie ] = useFindMovieById(null as any);\r\n\r\n    useEffect( () => {\r\n        setMovie((props?.match?.params as any).id);\r\n    }, [(props?.match?.params as any).id] );\r\n\r\n    const movieDetails = movie ? <MovieDetails movie={ movie }/> : null;\r\n    \r\n    return movieDetails;\r\n};\r\n\r\nexport default MovieDetailsPage;","import React from 'react';\r\n\r\nimport MovieGallery from '../../components/MovieGallery/MovieGallery';\r\nimport DetailsCard from '../../components/DetailsCard/DetailsCard';\r\nimport SubSection from '../../components/UI/SubSection/SubSection';\r\nimport ScrollableSection from '../../components/UI/ScrollableSection/ScrollableSection';\r\n\r\nimport { IMovieArticleData } from '../../components/MovieArticle/MovieArticle';\r\n\r\nimport styles from './ActorDetails.module.css';\r\n\r\nexport interface IActorDetailsData {\r\n    id: number;\r\n    name: string;\r\n    posterSource: string;\r\n    biography: string;\r\n    placeOfBirth: string;\r\n    birthdate: string;\r\n    movies: IMovieArticleData[];\r\n}\r\n\r\ninterface IActorDetails {\r\n    actor: IActorDetailsData;\r\n}\r\n\r\nconst ActorDetails = ( props: IActorDetails ) => {\r\n    return (\r\n        <ScrollableSection>\r\n            <DetailsCard\r\n                posterSource={ props.actor.posterSource } \r\n                posterAlt={ props.actor.name }\r\n                title={ props.actor.name } >\r\n                <SubSection title=\"Born:\">\r\n                    <p className={ styles.paragraph }>{ props.actor.placeOfBirth }</p>\r\n                    <p className={ styles.paragraph }>{ props.actor.birthdate }</p>\r\n                </SubSection>\r\n            </DetailsCard>\r\n            \r\n            <SubSection title=\"Biography\">\r\n                <p className={ styles.paragraph }>{ props.actor.biography }</p>\r\n            </SubSection>\r\n\r\n            <SubSection title=\"Movies\">\r\n                <MovieGallery movies={ props.actor.movies } />\r\n            </SubSection>\r\n        </ScrollableSection>\r\n    );\r\n};\r\n\r\nexport default ActorDetails;","import React, { useEffect } from 'react';\r\n\r\nimport ActorDetails from './ActorDetails';\r\n\r\nimport { useFindActorById } from '../../hooks/Fetch/Fetch';\r\n\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nconst ActorDetailsPage = ( props?: RouteComponentProps ) => {\r\n    const [ actor, setActor ] = useFindActorById(null as any);\r\n\r\n    useEffect( () => {\r\n        setActor( (props?.match.params as any).id );\r\n    }, [ (props?.match.params as any).id ] );\r\n\r\n    const actorDetails = actor ? <ActorDetails actor={ actor } /> : null;\r\n    \r\n    return actorDetails;\r\n};\r\n\r\nexport default ActorDetailsPage;","import React, { useEffect } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Layout from './containers/Layout/Layout';\nimport MovieExplorer from './containers/MovieExplorer/MovieExplorer';\nimport MovieDetailsPage from './containers/MovieDetails/MovieDetailsPage';\nimport ActorDetailsPage from './containers/ActorDetails/ActorDetailsPage';\n\nimport './App.css';\nimport { PathName } from './components/UI/RouterLink/RouterLink';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Layout>\n          <Route path={`${process.env.PUBLIC_URL}/`} exact component={ MovieExplorer }/>\n          <Route path={`${process.env.PUBLIC_URL}/${PathName.movie}/:id`} component={ MovieDetailsPage } />\n          <Route path={`${process.env.PUBLIC_URL}/${PathName.actor}/:id`} component={ ActorDetailsPage } />\n        </Layout>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}